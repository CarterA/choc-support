(name IR_Black)

(!default
    (background 000000)
    (color EDEDED)
    (caret FFFFFF)
    (invisibles CAE2FB3D)
    (selection 333333)
    (line-highlight FFFFFF24))

(apply comment
    Comment
    (color 7C7C7C))

(apply entity
    Entity
    (color FFD2A7))

(apply keyword
    Keyword
    (color 96CBFE))

(apply keyword.control
    Keyword.control
    (color 96CBFE))

(apply keyword.operator
    Keyword.Operator
    (color EDEDED))

(apply entity.name.type
    Class
    (color FFFFB6)
    (underline))

(apply support
    Support
    (color FFFFB6))

(apply storage
    Storage
    (color CFCB90))

(apply storage.modifier
    Storage.modifier
    (color 96CBFE))

(apply constant
    Constant
    (color 99CC99))

(apply string
    String
    (color A8FF60)
    (bold))

(apply constant.numeric
    Number
    (color FF73FD)
    (bold))

(apply punctuation Punctuation)

(apply variable
    Variable
    (color C6C5FE))

(apply invalid.deprecated
    [Invalid – Deprecated]
    (color FD5FF1)
    (italic)
    (underline))

(apply invalid.illegal
    [Invalid – Illegal]
    (color FD5FF1)
    (background 562D56BF))

(apply [text source]
    [♦ Embedded Source (Bright)]
    (background B1B3BA08))

(apply entity.other.inherited-class
    [♦ Entity inherited-class]
    (color 9B5C2E)
    (italic))

(apply [source string source]
    [♦ String embedded-variable]
    (color EDEDED))

(apply [source string source punctuation.section.embedded]
    [♦ String punctuation]
    (color 00A0A0))

(apply [string constant]
    [♦ String constant]
    (color 00A0A0))

(apply string.regexp
    [♦ String.regexp]
    (color E9C062))

(apply [string.regexp constant.character.escape, string.regexp source.ruby.embedded, string.regexp string.regexp.arbitrary-repitition]
    [♦ String.regexp.«special»]
    (color FF8000))

(apply string.regexp.group
    [♦ String.regexp.group]
    (color C6A24F)
    (background FFFFFF0F))

(apply string.regexp.character-class
    [♦ String.regexp.character-class]
    (color B18A3D))

(apply [string variable]
    [♦ String variable]
    (color 8A9A95))

(apply support.function
    [♦ Support.function]
    (color DAD085))

(apply support.constant
    [♦ Support.constant]
    (color FFD2A7))

(apply meta.preprocessor.c
    [c C/C++ Preprocessor Line]
    (color 8996A8))

(apply [meta.preprocessor.c keyword]
    [c C/C++ Preprocessor Directive]
    (color AFC4DB))

(apply meta.cast
    [j Cast]
    (color 676767)
    (italic))

(apply [meta.sgml.html meta.doctype, meta.sgml.html meta.doctype entity, meta.sgml.html meta.doctype string, meta.xml-processing, meta.xml-processing entity, meta.xml-processing string]
    [✘ Doctype/XML Processing]
    (color 494949))

(apply [meta.tag, meta.tag entity]
    [✘ Meta.tag.«all»]
    (color 96CBFE)
    (bold))

(apply [source entity.name.tag, source entity.other.attribute-name, meta.tag.inline, meta.tag.inline entity]
    [✘ Meta.tag.inline]
    (color 96CBFE))

(apply entity.other.attribute-name
    [✘ Meta.tag.attribute-name]
    (color FFD7B1))

(apply [entity.name.tag.namespace, entity.other.attribute-name.namespace]
    [✘ Namespaces]
    (color E18964))

(apply [meta.selector.css entity.name.tag]
    [§ css tag-name]
    (color 96CBFE)
    (underline))

(apply [meta.selector.css entity.other.attribute-name.tag.pseudo-class]
    [§ css:pseudo-class]
    (color 8F9D6A))

(apply [meta.selector.css entity.other.attribute-name.id]
    [§ css#id]
    (color 8B98AB))

(apply [meta.selector.css entity.other.attribute-name.class]
    [§ css.class]
    (color 62B1FE))

(apply support.type.property-name.css
    [§ css property-name:]
    (color EDEDED))

(apply [meta.property-group support.constant.property-value.css, meta.property-value support.constant.property-value.css]
    [§ css property-value;]
    (color F9EE98))

(apply [meta.preprocessor.at-rule keyword.control.at-rule]
    [§ css @at-rule]
    (color 8693A5))

(apply [meta.property-value support.constant.named-color.css, meta.property-value constant]
    [§ css additional-constants]
    (color 87C38A))

(apply meta.constructor.argument.css
    [§ css constructor.argument]
    (color 8F9D6A))

(apply [meta.diff, meta.diff.header]
    [⎇ diff.header]
    (color F8F8F8)
    (background 0E2231)
    (italic))

(apply markup.deleted
    [⎇ diff.deleted]
    (color F8F8F8)
    (background 420E09))

(apply markup.changed
    [⎇ diff.changed]
    (color F8F8F8)
    (background 4A410D))

(apply markup.inserted
    [⎇ diff.inserted]
    (color F8F8F8)
    (background 253B22))

(apply markup.italic
    [Markup: Italic]
    (color E9C062)
    (italic))

(apply markup.bold
    [Markup: Bold]
    (color E9C062)
    (bold))

(apply markup.underline
    [Markup: Underline]
    (color E18964)
    (underline))

(apply markup.quote
    [Markup: Quote]
    (color E1D4B9)
    (background FEE09C12)
    (italic))

(apply [markup.heading, markup.heading entity]
    [Markup: Heading]
    (color FEDCC5)
    (background 632D04))

(apply markup.list
    [Markup: List]
    (color E1D4B9))

(apply markup.raw
    [Markup: Raw]
    (color 578BB3)
    (background B1B3BA08))

(apply [markup comment]
    [Markup: Comment]
    (color F67B37)
    (italic))

(apply meta.separator
    [Markup: Separator]
    (color 60A633)
    (background 242424))

(apply [meta.line.entry.logfile, meta.line.exit.logfile]
    [Log Entry]
    (background EEEEEE29))

(apply meta.line.error.logfile
    [Log Entry Error]
    (background 751012))